plot (month, main = "지각생 통계", type = "l",
lty = 1, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month, main = "지각생 통계", type = "b",
lty = 1, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month, main = "지각생 통계", type = "o",
lty = 1, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month, main = "지각생 통계", type = "s",
lty = 1, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month,late, main = "지각생 통계", type = "l",
lty = 1, lwd = 1, xlab = "Month", ylab = "late cnt")
late <- c(5,8,7,9,4,6,12,13,8,6,
6,4)
plot (month,late, main = "지각생 통계", type = "l",
lty = 1, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month,late, main = "지각생 통계", type = "l",
lty = 1, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month,late, main = "지각생 통계", type = "b",
lty = 1, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month,late, main = "지각생 통계", type = "o",
lty = 1, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month,late, main = "지각생 통계", type = "s",
lty = 1, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month, main = "지각생 통계", type = "s",
lty = 1, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month,late, main = "지각생 통계", type = "s",
lty = 1, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month,late, main = "지각생 통계", type = "o",
lty = 1, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month,late, main = "지각생 통계", type = "b",
lty = 1, lwd = 3, xlab = "Month", ylab = "late cnt")
plot (month,late, main = "지각생 통계", type = "b",
lty = 2, lwd = 3, xlab = "Month", ylab = "late cnt")
1
plot (month,late, main = "지각생 통계", type = "o",
lty = 3, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month,late, main = "지각생 통계", type = "b",
lty = 1, lwd = 3, xlab = "Month", ylab = "late cnt")
plot (month,late, main = "지각생 통계", type = "o",
lty = 3, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month,late, main = "지각생 통계", type = "s",
lty = 1, lwd = 1, xlab = "Month", ylab = "late cnt")
plot (month,late, main = "지각생 통계", type = "o",
lty = 3, lwd = 1, xlab = "Month", ylab = "late cnt")
#복수의 선 그래프
late1 <- c(5,8,7,9,4,6,12,13,8,6,6,4)
late2 <- c(4,6,5,8,7,8,10,11,6,5,7,3)
data.frame(late1,late2)
#복수의 선 그래프
late1 <- c(5,8,7,9,4,6,12,13,8,6,6,4)
late2 <- c(4,6,5,8,7,8,10,11,6,5,7,3)
data.frame(late1,late2)
plot (month, late1, main = "지각생 통계", type = "b",
lty = 1, col="red", xlab = "Month", ylab = "late cnt",
ylim = c(1,15))
lines(month, late2, type = "b",
col = "blue")
text(month,late1)
text(month,c(late1,late2)
text(month,c(late1,late2))
lines(month, late2, type = "b",
col = "blue")
plot (month, late1, main = "지각생 통계", type = "b",
lty = 1, col="red", xlab = "Month", ylab = "late cnt",
ylim = c(1,15))
lines(month, late2, type = "b",
col = "blue")
#자료 탐색 실습 - 탐색적 데이터 분석
# 0단계 : 문제 정의
# 1단계 : 분석 대상 데이ㅓ셋 준비
#         BostdnHousing 데이터셋(mlbench pac.)
install.packages(mlbench)
#자료 탐색 실습 - 탐색적 데이터 분석
# 0단계 : 문제 정의
# 1단계 : 분석 대상 데이ㅓ셋 준비
#         BostdnHousing 데이터셋(mlbench pac.)
install.packages("mlbench")
library(mlbench)
library(mlbench)
data("BostonHousing")
myds <- BostonHousing[,c("crim",
"rm",
"dis",
"tax",
"medv")]
myds
head(BostonHousing)
rownames(BostonHousing)
# crim : 1인당 범죄율
# rm : 주택 1 가구당 방수
# dis : 보스턴 5개 지역센터까지의 거리
# tax : 재산세율
# medv : 주택가격
class(BostonHousing)
dim(BostonHousing)
str(BostonHousing)
head(BostonHousing)
tail(BostonHousing)
table(BostonHousing$chas)
table(BostonHousing$rad)
#파생변수 추가 : grp 변수추가 - 주택가격상중하
grp <- c()
for (i in 1:nrow(myds)) {
if (myds$medv[i] >= 25.0) {
grp[i] <- 'H'
} else if ( myds$medv[i] <= 17.0) {
grp[i] <- 'L'
} else {
grp[i] <- 'M'
}
}
grp
grp <- factor(grp)
grp
grp <- factor(grp, levels = c("H","M","L"))
grp
myds <- data.frame(myds, grp)
head(myds)
# 3단계. 데이터셋의 형태와 기본적인 내용 파악
str(myds)
head(myds)
table(myds$grp)
# 4단계. 히스토그램에 의한 관측값의 분포 확인
par(mfrow = c(2, 3,))
# 4단계. 히스토그램에 의한 관측값의 분포 확인
par(mfrow = c(2, 3))
for (i in 1:5){
hist(myds[,i], main = colnames(myds)[i],
col = "yellow")
}
myds[,1]
colnames(myds)
colnames(myds)[1]
# 5단계. 상자그림에 의한 관측값의 분포 확인
par(mfrow = c(2,3))
for (i in 1:5){
boxplot(myds[,i], main = colnames(myds)[i])
}
par(mfrow = c(1,1))
boxplot.stats(myds)
boxplot.stats(myds)
boxplot.stats(myds$rm)
boxplot.stats(myds$crim)
# 6단계. 그룹별 관측값의 분포 확인
boxplot(myds$crim~ myds$grp, main = "1인당 범죄율")
boxplot(myds$rm~ myds$grp, main = "방의 개수")
# 6단계. 그룹별 관측값의 분포 확인
boxplot(myds$crim~ myds$grp, main = "1인당 범죄율")
boxplot(myds$rm~ myds$grp, main = "방의 개수")
# 6단계. 그룹별 관측값의 분포 확인
boxplot(myds$crim~ myds$grp, main = "1인당 범죄율")
boxplot(myds$rm~ myds$grp, main = "방의 개수")
# 7단계. 다중 산점도를 통한 변수 간 상관관계 확인
pairs(myds[,-6])
myds[,-1]
myds[,-2]
head(myds[,-2])
head(myds[,-1])
head(myds[,-2])
head(myds[,-3])
head(myds[,-6])
pairs(myds)
# 7단계. 다중 산점도를 통한 변수 간 상관관계 확인
pairs(myds[,-6]) #6번째 변수는 생략(grp는 factor)
# 8단계. 그룹 정보를 포함한 변수 간 상관 관계 확인
point <- as.integer(myds$grp)
color <- c("red","green","blue")
pairs(myds[,-6], pch = point, col = color[point])
# 9단계. 변수 간 상관계수 확인
cor(myds[,-6])
income <- c(123,99,41,35,40,29,35,24,50,60)
term <- c(19,20,16,16,18,12,14,12,16,17)
plot(income,term)
plot(term, income)
plot(term, income, main = "교육기간별 수입입")
plot(term, income, main = "교육기간별 수입")
plot(term, income, main = "교육기간별 수입",xlab ="교육기간",
ylab = "수입")
plot(term, income, main = "교육기간별 수입",xlab ="교육기간",
ylab = "수입", type ="l")
plot(term, income, main = "교육기간별 수입",xlab ="교육기간",
ylab = "수입", )
plot(term, income, main = "교육기간별 수입",xlab ="교육기간",
ylab = "수입", lty =1)
plot(term, income, main = "교육기간별 수입",xlab ="교육기간",
ylab = "수입", lwd =1)
plot(term, income, main = "교육기간별 수입",xlab ="교육기간",
ylab = "수입")
boxplot(term, income)
plot(term, income, main = "교육기간별 수입",xlab ="교육기간",
ylab = "수입")
res <- lm(term,income)
#여러 변수들간의 산점도
vars <- c("mpg","disp","drat","wt")
target<- mtcars[,vars]
head(target)
pairs(target,main ="multu plots")
plot( iris_2, main = "Iris plot",
pch = c(point)*2,
col = color[point])
res <- lm(bal~beers, data = tbl)  #회귀식
res
term_income <- data.frame(income, term)
term_income <- data.frame(income, term)
plot(term, income, main = "교육기간별 수입",xlab ="교육기간",
ylab = "수입")
res <- lm(income~term, data=term_income )
res
abline(res)
cor(term_income)
abline(res)
cor(term_income)
time_score <- data.frame(score, time)
term_income <- data.frame(term, income)
plot(term, income, main = "교육기간별 수입",xlab ="교육기간",
ylab = "수입")
res <- lm(income~term, data=term_income )
res
abline(res)
time_score <- data.frame(score, time)
time_score
#Q.2
score <- c(77.5,60,50,95,55,85,72.5,80,92.5,87.5)
time <- c(14,10,20,7,25,9,15,13,4,21)
time_score <- data.frame(score, time)
time_score
plot(time,score, main = "TV시청 시간별 성적", xlab ="TV시청시간",
ylab ="성적적")
plot(time,score, main = "TV시청 시간별 성적", xlab ="TV시청시간",
ylab ="성적")
res <- lm(time~grad,data = time_score)
res
res <- lm(time~score,data = time_score)
res
abline(res)
abline(res)
res <- lm(score~time,data = time_score)
res
abline(res)
cor(time_score)
#Q.3
class(mtcars)
str(class)
str(mtcars)
vars <- c("cyl","disp","hp","drat","wt",
"qsec","vs","am","gear","carb")
pairs(target,main ="multu plots")
target <- mtcars[,vars]
pairs(target)
pairs(mtcars$mpg,target)
cor(mtcars$mpg,mtcars$cyl)
cor(mtcars$mpg,mtcars[,vars])
mtcars$cyl
str(mtcars)
plot(mtcars$mpg,mtcars$wt)
plot(mtcars$wt,mtcars$mpg, main ="")
plot(mtcars$wt,mtcars$mpg, main ="무게에 따른 연비비")
plot(mtcars$wt,mtcars$mpg, main ="무게에 따른 연비",
xlab ="무게", ylab ="연비")
plot(mtcars$wt,mtcars$mpg, main ="무게에 따른 연비",
xlab ="무게", ylab ="연비",col="green")
plot(mtcars$wt,mtcars$mpg, main ="무게에 따른 연비",
xlab ="무게", ylab ="연비",col="red")
res <- lm(data.frame(mtcars$mpg,mtcars$wt))
res
abline(res)
res <- lm(data.frame(mtcars$wt,mtcars$mpg))
res
abline(res)
cor(mtcars$wt,mtcars$mpg)
year_pop <- data.frame(years,population)
year_pop <- data.frame(year,population)
#Q.4
population <- c(51014,51245,51446,51635,51811,51973,
52123,52261,52388,52504,52609,52704)
years <- c(2015,2016,2017,2018,2019,2020,2021,2022,
2023,2024,2025,2026)
year_pop <- data.frame(years,population)
year_pop
plot(years,population)
plot(years,population,type="l")
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =1)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =2)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =0)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구")
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =3)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =2)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =1)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =2)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =1)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =2)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =3)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =4)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =1)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =1)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =2)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =3)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =3,lwd=1)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =3,lwd=2)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =3,lwd=3)
#Q.5.1
class(trees)
dim(trees)
str(trees)
head(trees)
tail(tress)
tail(trees)
str(trees)
plot(trees$Girth, trees$Height)
plot(trees$Girth, trees$Height, main ="나무의 지름과 높이이")
plot(trees$Girth, trees$Height, main ="나무의 지름과 높이")
plot(trees$Girth, trees$Height, main ="나무의 지름과 높이",
xlab = "지름",ylab = "높이이")
plot(trees$Girth, trees$Height, main ="나무의 지름과 높이",
xlab = "지름",ylab = "높이")
res <- lm(trees$Girth,trees$Height)
res <- lm(data.frame(trees$Girth,trees$Height))
res
abline(res)
plot(trees$Girth, trees$Height, main ="나무의 지름과 높이",
xlab = "지름",ylab = "높이")
res <- lm(data.frame(trees$Girth,trees$Height))
res
abline(res)
res <- lm(data.frame(trees$Height,trees$Girth))
res
abline(res)
cor(trees$Height,trees$Girth)
#Q.5.2
cor(trees$Height,trees$Girth)
cor(trees$Height,trees$Volume)
cor(trees$Volume,trees$Girth)
pairs(trees)
plot(trees$Girth, trees$Height, main ="나무의 지름과 높이",
xlab = "지름",ylab = "높이")
res <- lm(data.frame(trees$Height,trees$Girth))
res
abline(res)
plot(mtcars$wt,mtcars$mpg, main ="무게에 따른 연비",
xlab ="무게", ylab ="연비",col="red")
str(mtcars)
plot(mtcars$wt,mtcars$mpg, main ="무게에 따른 연비",
xlab ="무게", ylab ="연비",col="red")
res <- lm(data.frame(mtcars$wt,mtcars$mpg))
res
abline(res)
cor(mtcars$wt,mtcars$mpg)
str(mtcars)
vars <- c("cyl","disp","hp","drat","wt",
"qsec","vs","am","gear","carb")
target <- mtcars[,vars]
cor(mtcars$mpg,mtcars[,vars])
str(mtcars)
plot(mtcars$wt,mtcars$mpg, main ="무게에 따른 연비",
xlab ="무게", ylab ="연비",col="red")
res <- lm(data.frame(mtcars$wt,mtcars$mpg))
res
abline(res)
#문제2)
st <- data.frame(state.x77)
#Q.1
boxplot(st)
#Q.2
st_tmp <- boxplot.stats(st)$out
st[st %in% st_tmp]
sum(is.na(st))
boxplot.state(st)
#Q.2
library(dplyr)
st %>% filter(is.na(st))
st %>% filter(population)
#문제2)
st <- data.frame(state.x77)
st
#Q.2
boxplot.stats(st)
AQ <- airquality
class(AQ)
#Q.2
sum(is.na(AQ))
#Q.2
col(is.na(AQ))
#Q.2
colSums(is.na(AQ))
#Q.3
rowSums(is.na(AQ))
apply(AQ,2,col_na)
#Q.1
col_na <- function(y){
sum(is.na(y))
}
apply(AQ,2,col_na)
apply(AQ,1,col_na)
#Q.4
AQ[!complete.cases(is.na(AQ)),]
source('D:/WorkR/실습_문제/HyeonDongyeop_20191205.R', encoding = 'UTF-8', echo=TRUE)
#Q.4
AQ[!complete.cases(AQ),]
#Q.4
AQ[complete.cases(AQ),]
#Q.4
AQ[!complete.cases(AQ),]
#Q.5
appy(AQ[,!complete.cases(AQ)],2,mean)
#Q.5
apply(AQ[,!complete.cases(AQ)],2,mean)
AQ[,!complete.cases(AQ)]
AQ[,complete.cases(AQ)]
AQ[complete.cases(AQ),]
AQ[!complete.cases(AQ),]
AQ[,complete.cases(AQ)]
AQ %>% select(AQ[!!complete.cases(AQ),])
AQ %>% select(AQ[!!complete.cases(AQ),]) %>%
head
#Q.5
boxplot.stats(AQ)
#Q.5
boxplot.stats(st)
#Q.5
boxplot.stats(AQ)
#Q.5
AQ[is.na(AQ),]
#Q.5
AQ[is.na(AQ)]
mean(AQ[is,na(AQ)])
mean(AQ[is.na(AQ)])
mean(AQ[is.na(AQ)],)
AQ[,is.na(AQ)]
#결측치 자료 조합 확인용 시각화 도구
aggr(x,prop = FALSE, numbers = TRUE)
require(VIM)
#결측치 자료 조합 확인용 시각화 도구
aggr(x,prop = FALSE, numbers = TRUE)
## Matrix / Data Frame 결측치 처리
x <- iris
x[1,2] <- NA
x[1,3] <- NA
x[2,3] <- NA
x[3,4] <- NA
#결측치 자료 조합 확인용 시각화 도구
aggr(x,prop = FALSE, numbers = TRUE)
#두 개의 변수 간의 결측치 관계 확인 시각화 도구
marginplot(x[c("Sepal.Width","Petal.Width")],
pch = 20,
col = c("darkgray","red","blue"))
marginplot(x[c("Sepal.Width","Sepal.Length")],
pch = 20,
col = c("darkgray","red","blue"))
# Matrix / Data Frame의 행(data)별 결측치 확인
rowSums(is.na(x))
sum(rowSums(is.na(x))>0)
sum(is.na(x))
sum(rowSums(is.na(x))>0)
sum(is.na(x))
#Q.5
ad<- AQ[is.na(AQ)]
ad
ad <- 1
ad
#Q.5
ad<- AQ[is.na(AQ)]
ad <- 1
#Q.5
ad<- AQ[is.na(AQ)]
ad
ad <- NA ==1
ad
#Q.5
ad<- AQ[is.na(AQ)]
ad <- NA ==1
#Q.5
ad<- AQ[is.na(AQ)]
ad
is.na(AQ)
ad <- AQ
is.na(ad) <- 0
ad
is.ad
is.na(ad)
#Q.5
AQ[!complete.cases(AQ),]
(state.x77)
#문제1)
ds <- data.frame(state.x77)
#Q.1
boxplot(st)
#Q.3
boxplot.stats(st)
#Q.3
boxplot.stats(AQ)
#Q.5
AQ[!complete.cases(AQ),]
#Q.5
AQ[!complete.cases(AQ),]
