plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =3)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =3,lwd=1)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =3,lwd=2)
plot(years,population,type="l", main = "연도별 인구",
xlab = "연도" ,ylab = "인구", las =3,lwd=3)
#Q.5.1
class(trees)
dim(trees)
str(trees)
head(trees)
tail(tress)
tail(trees)
str(trees)
plot(trees$Girth, trees$Height)
plot(trees$Girth, trees$Height, main ="나무의 지름과 높이이")
plot(trees$Girth, trees$Height, main ="나무의 지름과 높이")
plot(trees$Girth, trees$Height, main ="나무의 지름과 높이",
xlab = "지름",ylab = "높이이")
plot(trees$Girth, trees$Height, main ="나무의 지름과 높이",
xlab = "지름",ylab = "높이")
res <- lm(trees$Girth,trees$Height)
res <- lm(data.frame(trees$Girth,trees$Height))
res
abline(res)
plot(trees$Girth, trees$Height, main ="나무의 지름과 높이",
xlab = "지름",ylab = "높이")
res <- lm(data.frame(trees$Girth,trees$Height))
res
abline(res)
res <- lm(data.frame(trees$Height,trees$Girth))
res
abline(res)
cor(trees$Height,trees$Girth)
#Q.5.2
cor(trees$Height,trees$Girth)
cor(trees$Height,trees$Volume)
cor(trees$Volume,trees$Girth)
pairs(trees)
plot(trees$Girth, trees$Height, main ="나무의 지름과 높이",
xlab = "지름",ylab = "높이")
res <- lm(data.frame(trees$Height,trees$Girth))
res
abline(res)
plot(mtcars$wt,mtcars$mpg, main ="무게에 따른 연비",
xlab ="무게", ylab ="연비",col="red")
str(mtcars)
plot(mtcars$wt,mtcars$mpg, main ="무게에 따른 연비",
xlab ="무게", ylab ="연비",col="red")
res <- lm(data.frame(mtcars$wt,mtcars$mpg))
res
abline(res)
cor(mtcars$wt,mtcars$mpg)
str(mtcars)
vars <- c("cyl","disp","hp","drat","wt",
"qsec","vs","am","gear","carb")
target <- mtcars[,vars]
cor(mtcars$mpg,mtcars[,vars])
str(mtcars)
plot(mtcars$wt,mtcars$mpg, main ="무게에 따른 연비",
xlab ="무게", ylab ="연비",col="red")
res <- lm(data.frame(mtcars$wt,mtcars$mpg))
res
abline(res)
#문제2)
st <- data.frame(state.x77)
#Q.1
boxplot(st)
#Q.2
st_tmp <- boxplot.stats(st)$out
st[st %in% st_tmp]
sum(is.na(st))
boxplot.state(st)
#Q.2
library(dplyr)
st %>% filter(is.na(st))
st %>% filter(population)
#문제2)
st <- data.frame(state.x77)
st
#Q.2
boxplot.stats(st)
AQ <- airquality
class(AQ)
#Q.2
sum(is.na(AQ))
#Q.2
col(is.na(AQ))
#Q.2
colSums(is.na(AQ))
#Q.3
rowSums(is.na(AQ))
apply(AQ,2,col_na)
#Q.1
col_na <- function(y){
sum(is.na(y))
}
apply(AQ,2,col_na)
apply(AQ,1,col_na)
#Q.4
AQ[!complete.cases(is.na(AQ)),]
source('D:/WorkR/실습_문제/HyeonDongyeop_20191205.R', encoding = 'UTF-8', echo=TRUE)
#Q.4
AQ[!complete.cases(AQ),]
#Q.4
AQ[complete.cases(AQ),]
#Q.4
AQ[!complete.cases(AQ),]
#Q.5
appy(AQ[,!complete.cases(AQ)],2,mean)
#Q.5
apply(AQ[,!complete.cases(AQ)],2,mean)
AQ[,!complete.cases(AQ)]
AQ[,complete.cases(AQ)]
AQ[complete.cases(AQ),]
AQ[!complete.cases(AQ),]
AQ[,complete.cases(AQ)]
AQ %>% select(AQ[!!complete.cases(AQ),])
AQ %>% select(AQ[!!complete.cases(AQ),]) %>%
head
#Q.5
boxplot.stats(AQ)
#Q.5
boxplot.stats(st)
#Q.5
boxplot.stats(AQ)
#Q.5
AQ[is.na(AQ),]
#Q.5
AQ[is.na(AQ)]
mean(AQ[is,na(AQ)])
mean(AQ[is.na(AQ)])
mean(AQ[is.na(AQ)],)
AQ[,is.na(AQ)]
#결측치 자료 조합 확인용 시각화 도구
aggr(x,prop = FALSE, numbers = TRUE)
require(VIM)
#결측치 자료 조합 확인용 시각화 도구
aggr(x,prop = FALSE, numbers = TRUE)
## Matrix / Data Frame 결측치 처리
x <- iris
x[1,2] <- NA
x[1,3] <- NA
x[2,3] <- NA
x[3,4] <- NA
#결측치 자료 조합 확인용 시각화 도구
aggr(x,prop = FALSE, numbers = TRUE)
#두 개의 변수 간의 결측치 관계 확인 시각화 도구
marginplot(x[c("Sepal.Width","Petal.Width")],
pch = 20,
col = c("darkgray","red","blue"))
marginplot(x[c("Sepal.Width","Sepal.Length")],
pch = 20,
col = c("darkgray","red","blue"))
# Matrix / Data Frame의 행(data)별 결측치 확인
rowSums(is.na(x))
sum(rowSums(is.na(x))>0)
sum(is.na(x))
sum(rowSums(is.na(x))>0)
sum(is.na(x))
#Q.5
ad<- AQ[is.na(AQ)]
ad
ad <- 1
ad
#Q.5
ad<- AQ[is.na(AQ)]
ad <- 1
#Q.5
ad<- AQ[is.na(AQ)]
ad
ad <- NA ==1
ad
#Q.5
ad<- AQ[is.na(AQ)]
ad <- NA ==1
#Q.5
ad<- AQ[is.na(AQ)]
ad
is.na(AQ)
ad <- AQ
is.na(ad) <- 0
ad
is.ad
is.na(ad)
#Q.5
AQ[!complete.cases(AQ),]
(state.x77)
#문제1)
ds <- data.frame(state.x77)
#Q.1
boxplot(st)
#Q.3
boxplot.stats(st)
#Q.3
boxplot.stats(AQ)
#Q.5
AQ[!complete.cases(AQ),]
#Q.5
AQ[!complete.cases(AQ),]
#Q.2
install.packages(dplyr)
#Q.2
install.packages("dplyr")
#Q.2
install.packages("dplyr")
#Q.2
install.packages("dplyr")
#Q.2
install.packages("dplyr")
#Q.2
install.packages("dplyr")
libpaths()
.libpaths()
.libPaths()
.libPaths("C:\R\library")
.libPaths("C:/R/library")
.libPaths()
#Q.2
install.packages("dplyr")
install.packages(c("descr", "ggplot2", "psych", "VIM"))
#Q.5
colMeans(AQ,na.rm=T)
AQ[is.na(AQ)] <- colMeans(AQ,na.rm=T)
AQ[is.na(AQ)]
col(AQ[is.na(AQ)])
## Matrix / Data Frame 결측치 처리
x <- iris
x[1,2] <- NA
x[1,3] <- NA
x[2,3] <- NA
x[3,4] <- NA
head(x)
return ( sum(is.na(y)))
# apply() 이용
col_na <- function(y) {
return ( sum(is.na(y)))
}
na_count <- apply(x,2,col_na)
na_count
subset(AQ, AQ==NA )
apply(AQ[is.na(AQ)],1,sum)
apply(AQ,1,sum)
apply(AQ[is.na(AQ),],1,sum)
# Q.1
st <- as.data.frame(state.x77)
st %>% arrange(Population)
# Q.1
libray(dplyr)
# Q.1
library(dplyr)
st %>% arrange(Population)
#Q.2
st %>% arrange(desc(Income))
#Q.2
st %>% group_by(Income) %>%
arrange(desc(Income))
#Q.3
st %>% arrange(Illiteracy) %>%
head(10)
st
dt<- st %>% arrange(Illiteracy) %>%
head(10)
dt
st[dt]
col(st)
row(st)
rownames(st)
st %>% group_by(rownames(st)) %>%
arrange(Illiteracy)
st %>% group_by(a) %>%
arrange(Illiteracy)
st[1,]
st[,1]
st[,]
st[,rownames(st)]
st %>% group_by(rownames(st)) %>%
arrange(Illiteracy)
subset(AQ, Ozone == NA )
subset(AQ, Ozone >1 )
airquality
subset(AQ, Ozone == NA )
subset(AQ, Ozone == is.na(AQ) )
subset(AQ, select = NA )
subset(AQ, select == NA )
subset(AQ, select = Ozone )
subset(AQ, select = is.na(AQ) )
subset(AQ, select == is.na(AQ) )
is.na(AQ)
subset(AQ, select = AQ[is.na(AQ)] )
#Q.1
mt.gear <- split(mtcars, mtcars$gear)
mt.gear
#Q.2
subset(mt.gear, gear == 4)
mt.gear
mt.gear$gear
summary(mt.gear)
# 데이터 분리
sp <- split(iris, iris$Species)
sp$setosa
sp
#Q.2
subset(mt.gear, gear == 4)
mt.gear
mt.gear$`4`
#Q.3
mt.gear.35 <- merge(mt.gear$`4`,mt.gear$`5`)
mt.gear.35
#Q.3
mt.gear.35 <- merge(mt.gear$`4`,mt.gear$`5`, by="gear")
mt.gear.35
#Q.3
mt.gear.35 <- merge(mt.gear$`4`,mt.gear$`5`, by="gear")
mt.gear.35
#Q.3
mt.gear.35 <- merge(mt.gear$`3`,mt.gear$`5`, by="gear")
mt.gear.35
mt.gear$3
mt.gear$`3`
#Q.3
mt.gear.35 <- merge(mt.gear$`3`,mt.gear$`5`, all = T)
mt.gear.35
#Q.4
subset(mtcars, 1.5<wt<3.0)
#Q.4
subset(mtcars, wt<3.0)
#Q.4
subset(mtcars, wt<3.0 & wt > 1.5)
#Q.1
authors <- data.frame( surname = c( "Twein", "Venables", "Tierney", "Ripley", "McNeil" ),
nationality = c( "US", "Australia", "US", "UK", "Australia" ),
retired = c( "yes", rep( "no", 4 ) ) )
books <- data.frame( name = c( "Johns", "Venables", "Tierney", "Ripley", "Ripley", "McNeil" ),
title = c( "Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis" ),
other.author = c( NA, "Ripley", NA, NA, NA, NA ) )
authors
books
merge(authors,books,by.x = "surname",
by.y = "name")
#Q.2
merge(authors,books,by.x = "surname",
by.y = "name",all.x = T)
authors
#Q.3
merge(authors,books,by.x = "surname",
by.y = "name",all.y  = T)
books
#Q.4
merge(authors,books,by.x = "surname",
by.y = "other.author")
#Q.3 ------------------------
mt.gear.35 <- merge(mt.gear$`3`,mt.gear$`5`, all = T)
mt.gear.35
mt.gear$`3`
mt.gear$`5`
length(row.names(mt.gear.35))
length(row.names(mt.gear$`3`))
length(row.names(mt.gear$`5`
))
#Q.5 --------------
a <- AQ
a[a[is.na(a)]] <- 0
is.na(a)['Ozone']
is.na(a)[,'Ozone']
is.na(a)[,'Ozone']
sum(is.na(a)[,'Ozone'])
a[is.na(a)[,'Ozone']] <- 0
a[is.na(a)[,'Ozone']] <- 0
is.na(a)[,'Ozone']
is.na(a)[,'Ozone'] <-0
a[is.na(a)[,'Ozone']]
a[,is.na(a)[,'Ozone']]
a[is.na(a)[,'Ozone'],]
a[is.na(a)[,'Ozone'],] <- 0
a[is.na(a)[,'Ozone'],]
#Q.5 --------------
a <- AQ
a[is.na(a)[,'Ozone']] <- 0
a[is.na(a)[,'Ozone'],] <- 1
a[is.na(a)[,'Ozone'],]
a[is.na(a)[,'Ozone']]
a[is.na(a)[,'Ozone'],]
a
#Q.5 --------------
a <- AQ
a
a[is.na(a),]
a[is.na(a),] <1
a[is.na(a),] <-1
a
a[is.na(a),] <-1
a[is.na(a)] <-1
a
#Q.5 --------------
a <- AQ
a
a[is.na(a)] <-colMeans(a,na.rm=T)
a[is.na(a)] <- colMeans(a,na.rm=T)
a
mean(AQ,na.rm=T)
mean(AQ[,1],na.rm=T)
colMeans(AQ,na.rm=T)
#Q.1
boxplot(st)
boxstats(st)
boxplot.stats(st)
boxplot.stats(st$Population)
boxplot.stats(st$Population)$out
boxplot.stats(st$Population)$out -< NA
boxplot.stats(st$Population)$out <- NA
boxplot.stats(st$Population)$out
a[is.na(a)] <- colMeans(a,na.rm=T)
a
apply(a[is.na(a)],2,sum)
apply(a[is.na(a)],1,umm)
apply(a[is.na(a)],1,sum)
apply(a,1,sum)
col(a[1])
colnames(a[1])
colMeans(a[,'Ozone'],na.rm=T)
mean(a[,'Ozone'],na.rm=T)
for( i in 1:ncol(a)){
a[is.na(a)][,colnames(a[i])] <- mean(a[,i],na.rm=T)
}
a[is.na(a)][,colnames(a[1])]
a[is.na(a)[,'Ozone']
a[is.na(a)[,'Ozone']]
a[is.na(a)[,'Ozone'],]
a[is.na(a)][,colnames(a[1]),]
a[is.na(a)[,colnames(a[1])]]
a[is.na(a)[,colnames(a[1])],]
for( i in 1:ncol(a)){
a[is.na(a)[,colnames(a[1])],] <- mean(a[,i],na.rm=T)
}
a
a[is.na(a)[,colnames(a[i])],] <- mean(a[,i],na.rm=T)
a
#Q.5 --------------
a <- AQ
a
for( i in 1:ncol(a)){
a[is.na(a)[,colnames(a[i])],] <- mean(a[,i],na.rm=T)
}
a
#Q.5 --------------
a <- AQ
a[is.na(a)[,colnames(a[1])]
a[is.na(a)[,colnames(a[1]),]
a[is.na(a)[,colnames(a[1])],]
a[is.na(a)]$Ozone
a[is.na(a)]
a[is.na(a)$Ozone]
is.na(a)
is.na(a)$Ozone
is.na(a)[,1]
a[is.na(a)[,1]]
a[is.na(a)[,1],]
a[is.na(a)[,1],]$Ozone
a[is.na(a)[,1],]$Ozone <- mean(a[,1],na.rm=T)
a[is.na(a)[,1],]$Ozone
a
#Q.5 --------------
a <- AQ
a[is.na(a)[,1],][,1] <- mean(a[,1],na.rm=T)
a
for( i in 1:ncol(a)){
a[is.na(a)[,i],][,i] <- mean(a[,i],na.rm=T)
}
#Q.5 --------------
a <- AQ
for( i in 1:ncol(a)){
a[is.na(a)[,i],][,i] <- mean(a[,i],na.rm=T)
}
a
#AQ[is.na(AQ)] <- colMeans(AQ,na.rm=T)
for( i in 1:ncol(AQ)){
AQ[is.na(AQ)[,i],][,i] <- mean(AQ[,i],na.rm=T)
}
AQ
#AQ[is.na(AQ)] <- colMeans(AQ,na.rm=T)
AQ2<-for( i in 1:ncol(AQ)){
AQ[is.na(AQ)[,i],][,i] <- mean(AQ[,i],na.rm=T)
}
AQ2
#AQ[is.na(AQ)] <- colMeans(AQ,na.rm=T)
AQ2<-for( i in 1:ncol(AQ)){
AQ[is.na(AQ)[,i],][,i] <- mean(AQ[,i],na.rm=T)
}
AQ2
#AQ[is.na(AQ)] <- colMeans(AQ,na.rm=T)
for( i in 1:ncol(AQ)){
AQ[is.na(AQ)[,i],][,i] <- mean(AQ[,i],na.rm=T)
}
AQ
# 臾몄젣3)
# Q.1
AQ <- airquality
ncol
#AQ[is.na(AQ)] <- colMeans(AQ,na.rm=T)
for( i in 1:ncol(AQ)){
AQ[is.na(AQ)[,i],][,i] <- mean(AQ[,i],na.rm=T)
}
AQ
AQ2 <- AQ
AQ2
